import { DataValue } from './data-value';
import { FilesConstraintConfig, ConditionType, ConditionValue } from '../model';
export declare class FilesDataValue implements DataValue {
    readonly value: any;
    readonly config: FilesConstraintConfig;
    readonly filesInMemory: File[];
    readonly removedFiles: string[];
    constructor(value: any, config: FilesConstraintConfig);
    addFileInMemory(file: File): void;
    addFilesInMemory(files: File[]): void;
    removeFileInMemory(index: number): void;
    removeFiles(fileIds: string[]): void;
    removeFile(fileId: string): void;
    format(): string;
    preview(): string;
    serialize(): any;
    title(): string;
    editValue(): string;
    isValid(ignoreConfig?: boolean): boolean;
    increment(): FilesDataValue;
    decrement(): FilesDataValue;
    compareTo(otherValue: FilesDataValue): number;
    copy(newValue?: any): FilesDataValue;
    parseInput(inputValue: string): FilesDataValue;
    meetCondition(condition: ConditionType, values: ConditionValue[]): boolean;
    meetFullTexts(fulltexts: string[]): boolean;
    valueByCondition(condition: ConditionType, values: ConditionValue[]): any;
}
