import { DataValue } from './data-value';
import { ConditionType, ConditionValue, LinkConstraintConfig } from '../model';
export declare class LinkDataValue implements DataValue {
    readonly value: string;
    readonly config: LinkConstraintConfig;
    readonly inputValue?: string;
    readonly linkValue: string;
    readonly titleValue: string;
    readonly rawLinkValue: string;
    readonly rawTitleValue: string;
    constructor(value: string, config: LinkConstraintConfig, inputValue?: string);
    private checkLinkValue;
    format(): string;
    editValue(): string;
    preview(): string;
    serialize(): any;
    title(): string;
    compareTo(otherValue: LinkDataValue): number;
    copy(newValue?: any): LinkDataValue;
    increment(): DataValue;
    decrement(): DataValue;
    isValid(ignoreConfig?: boolean): boolean;
    meetCondition(condition: ConditionType, values: ConditionValue[]): boolean;
    meetFullTexts(fulltexts: string[]): boolean;
    parseInput(inputValue: string): LinkDataValue;
    valueByCondition(condition: ConditionType, values: ConditionValue[]): any;
}
export declare function completeLinkValue(link: string): string;
export declare function linkHasValidProtocol(link: string): boolean;
export declare function formatLinkValue(link: string, title: string): string;
export declare function parseLinkValue(value: string): {
    link?: string;
    title?: string;
};
