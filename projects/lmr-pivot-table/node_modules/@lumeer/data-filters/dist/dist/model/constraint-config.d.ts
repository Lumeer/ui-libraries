import Big from 'big.js';
import { LanguageTag, AddressField } from './index';
export interface AddressConstraintConfig {
    fields: AddressField[];
}
export interface BooleanConstraintConfig {
}
export interface ColorConstraintConfig {
}
export declare enum CoordinatesFormat {
    DecimalDegrees = "DD",
    DegreesMinutesSeconds = "DMS"
}
export interface CoordinatesConstraintConfig {
    format?: CoordinatesFormat;
    precision: number;
}
export interface DateTimeConstraintConfig {
    format: string;
    minValue?: Date;
    maxValue?: Date;
    range?: boolean;
    asUtc?: boolean;
}
export interface DurationConstraintConfig {
    type: DurationType;
    conversions: Record<DurationUnit, number>;
    maxUnit?: DurationUnit;
    maxUnits?: number;
    decimalPlaces?: number;
}
export declare enum DurationUnit {
    Weeks = "w",
    Days = "d",
    Hours = "h",
    Minutes = "m",
    Seconds = "s"
}
export declare const smallestDurationUnit = DurationUnit.Seconds;
export declare enum DurationType {
    Work = "Work",
    Classic = "Classic",
    Custom = "Custom"
}
export interface FilesConstraintConfig {
}
export interface NumberConstraintConfig {
    minValue?: Big;
    maxValue?: Big;
    decimals?: number;
    compact?: boolean;
    separated?: boolean;
    forceSign?: boolean;
    negative?: boolean;
    currency?: LanguageTag;
}
export interface PercentageConstraintConfig {
    format?: string;
    decimals?: number;
    minValue?: number;
    maxValue?: number;
    style?: PercentageDisplayStyle;
    color?: string;
}
export declare enum PercentageDisplayStyle {
    Text = "Text",
    ProgressBar = "ProgressBar"
}
export interface RatingConstraintConfig {
    icon: string;
    text: boolean;
    minValue: number;
    maxValue: number;
}
export interface SelectConstraintOption {
    displayValue?: string;
    icon?: string;
    value: string;
    background?: string;
}
export interface SelectConstraintConfig {
    multi?: boolean;
    selectionListId?: string;
    displayValues?: boolean;
    options: SelectConstraintOption[];
}
export interface ViewConstraintConfig {
    multi?: boolean;
    openInNewWindow?: boolean;
}
export interface TagConstraintConfig {
    options: string[];
}
export declare enum CaseStyle {
    None = "None",
    LowerCase = "LowerCase",
    UpperCase = "UpperCase",
    TitleCase = "TitleCase",
    SentenceCase = "SentenceCase"
}
export interface TextConstraintConfig {
    caseStyle?: CaseStyle;
    minLength?: number;
    maxLength?: number;
    regexp?: string;
}
export interface UserConstraintConfig {
    multi?: boolean;
    onlyIcon?: boolean;
    externalUsers?: boolean;
    type?: UserConstraintType;
}
export declare enum UserConstraintType {
    Users = "users",
    Teams = "teams",
    UsersAndTeams = "usersAndTeams"
}
export interface TeamConstraintConfig {
    multi?: boolean;
}
export interface LinkConstraintConfig {
    openInApp?: boolean;
}
export interface ActionConstraintConfig {
    requiresConfirmation?: boolean;
    confirmationTitle?: string;
    rule: string;
    background: string;
    title: string;
    icon: string;
}
export type ConstraintConfig = ActionConstraintConfig | AddressConstraintConfig | CoordinatesConstraintConfig | DateTimeConstraintConfig | DurationConstraintConfig | NumberConstraintConfig | PercentageConstraintConfig | RatingConstraintConfig | SelectConstraintConfig | LinkConstraintConfig | TagConstraintConfig | TextConstraintConfig | UserConstraintConfig | ColorConstraintConfig | ViewConstraintConfig;
